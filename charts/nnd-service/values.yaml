replicaCount: 1

env: "prod"

image:
  repository: "public.ecr.aws/o1z7u2g7/cdc-nbs-modernization/nnd-service"
  pullPolicy: IfNotPresent
  tag: "v1.0.5"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8081"

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8081
  httpsPort: 443

ingress:
  enabled: true
  className: "nginx"
  tls:
  - secretName: "nndservice.EXAMPLE_DOMAIN"
    hosts:
    - "nndservice.EXAMPLE_DOMAIN"

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ingressHost: "nndservice.EXAMPLE_DOMAIN"


# dbserver is passed in as an environment variable. It is just the database endpoint
jdbc:
  dbserver: "EXAMPLE_DB_ENDPOINT"
  username: "EXAMPLE_DB_USER"
  password: "EXAMPLE_DB_USER_PASSWORD"

kafka:
  cluster: "EXAMPLE_MSK_KAFKA_ENDPOINT"

log:
  path: "/usr/share/nndservice/data"

pvc:
  diPvClaim:
    storageClass: efs-nndservice
    storageRequest: 20Gi

efsFileSystemId: "EXAMPLE_EFS_ID"

#authUri: "http://keycloak.keycloak.svc.cluster.local/realms/NBS"
authUri: "http://keycloak.default.svc.cluster.local/auth/realms/NBS"

sftp:
  enabled: "EXAMPLE_SFTP_ENABLED"
  host: "EXAMPLE_SFTP_HOST"
  username: "EXAMPLE_SFTP_USER"
  password: "EXAMPLE_SFTP_PASS"

##################################
