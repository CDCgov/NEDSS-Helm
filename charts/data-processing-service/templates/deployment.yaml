apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "data-processing-service.fullname" . }}
  labels:
    {{- include "data-processing-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "data-processing-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "data-processing-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "data-processing-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: RC_CLIENT_ID
              value: {{ .Values.keycloak.srte.clientId }}
            - name: RC_CLIENT_SECRET
              value: {{ .Values.keycloak.srte.clientSecret }}
            - name: RC_URL
              value: {{ .Values.dataingestion.uri }}
            - name: RC_EP_TOKEN
              value: /data/api/auth/token
            - name: RC_EP_CACHE_STR
              value: /data/srte/cache/string
            - name: RC_EP_CACHE_CONTAIN
              value: /data/srte/cache/contain
            - name: RC_EP_CACHE_OBJ
              value: /data/srte/cache/object
            - name: EP_CACHE_LOCALID
              value: /data/odse/localId
            - name: NBS_DBSERVER
              value: {{ .Values.jdbc.dbserver }}
            - name: NBS_DBUSER
              value: {{ .Values.jdbc.username }}
            - name: NBS_DBPASSWORD
              value: {{ .Values.jdbc.password }}
            - name: NBS_AUTH_USER
              value: {{ .Values.nbs.authuser }}
            - name: KAFKA_BOOTSTRAP_SERVER
              value: {{ .Values.kafka.cluster }}
            - name: SERVICE_TZ
              value: {{ .Values.timezone}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
