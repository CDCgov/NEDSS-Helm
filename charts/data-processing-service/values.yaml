replicaCount: 1

env: "demo"

image:
  repository: "public.ecr.aws/o1z7u2g7/cdc-nbs-modernization/data-reporting-service/organization-reporting-service"
  pullPolicy: IfNotPresent
  tag: "v1.0.3"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8081"

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8082
  httpsPort: 443

ingress:
  enabled: true
  className: "nginx"
  tls:
  - secretName: app.EXAMPLE_HOST
    hosts:
    - app.EXAMPLE_HOST

# Kubernetes resource limits
resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ingressHost: "app.EXAMPLE_HOST"

nbs:
  dbserver: ""
  username: ""
  password: ""

kafka:
  cluster: ""

log:
  path: "/usr/share/dataprocessing/data"


