replicaCount: 1
env: "dts"
image:
  repository: ""
  pullPolicy: IfNotPresent
  tag: 7.11.1-SNAPSHOT.c371caa
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  create: true
  annotations: {}
  name: ""
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8081"
podSecurityContext: {}
securityContext: {}
service:
  type: ClusterIP
  port: 8082
  httpsPort: 443
ingress:
  enabled: true
  className: "nginx"
  tls:
    - secretName: app.dts1.nbspreview.com
      hosts:
        - app.dts1.nbspreview.com
# Kubernetes resource limits
resources:
  limits:
    memory: "2Gi"
    cpu: "1800m"
  requests:
    memory: "1Gi"
    cpu: "1000m"
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
ingressHost: "app.dts1.nbspreview.com"
jdbc:
  dbserver: ""
  username: ""
  password: ""
nbs:
  authuser: ""
kafka:
  cluster: ""
log:
  path: "/usr/share/dataprocessing/data"
dataingestion:
  uri: ""
keycloak:
  srte:
    clientId: ""
    clientSecret: ""
# Override available for readiness and liveness probes: port, initialDelaySeconds, periodSeconds, failureThreshold
probes:
  readiness:
    enabled: false
  liveness:
    enabled: false
kafkaThread: "1"
features:
  modernizedMatching:
    enabled: false
    url: ""
thread:
  enabled: true
  size: "5"
  batchSize: "50"
  processorDelay: "1000"
hikari:
  poolSize: "30"
  minIdle: "10"
  conIdleTimeout: "60000"
  conTimeout: "10000"
  maxLifeTime: "900000"
  leakDetectThresHold: "15000"
uid:
  poolSize: "5000"
  minPoolSize: "1000"
timezone: "UTC"
springBootProfile: "dev"
