replicaCount: 1

env: "dts1"

image:
  repository: ""
  pullPolicy: IfNotPresent
  tag: 1.0.1-SNAPSHOT.34fa7f9

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8081"

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8081
  httpsPort: 443

reportingService:
  enabled: "true"
  personReportingServicePort: 8091
  organizationReportingServicePort: 8092
  investigationReportingServicePort: 8093
  observationReportingServicePort: 8094
  postProcessingReportingServicePort: 8095
  ldfdataReportingServicePort: 8097

dataprocessingService:
  enabled: "true"
  port: 8082

nndService:
  enabled: "true"
  port: 8081

srtedataService:
  enabled: "true"
  port: 8084

ingress:
  enabled: true
  className: "nginx"
  tls:
  - secretName: dataingestion.dts1.nbspreview.com
    hosts:
    - dataingestion.dts1.nbspreview.com

# Kubernetes resource limits
resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ingressHost: "dataingestion.dts1.nbspreview.com"

jdbc:
  dbserver: ""
  username: ""
  password: ""

kafka:
  cluster: ""

log:
  path: "/usr/share/dataingestion/data"

cloudProvider: aws

#Azure PVC Settings#
azure:
  files:
    resourceGroupName: 
    storageAccountName: 
    storageClass: azurefile-csi-private-di
    storageRequest: 20Gi

#AWS PVC Settings#

pvc:
  diPvClaim:
    storageClass: efs-dataingestion
    storageRequest: 20Gi

efsFileSystemId: "EXAMPLE_EFS_ID"

authUri: ""

sftp:
  enabled: ""
  host: ""
  username: ""
  password: ""
  elrFileExtns: "txt,hl7"
  filePaths: "/"
# filePaths value should be comma seperated like "/,/LAB-1,/lab-2, /lab-2/lab2-sub-folder"

kafkaConcurrency: "1"


apiPayloadMaxSize: "100MB"

# Override available for readiness and liveness probes: port, initialDelaySeconds, periodSeconds, failureThreshold
probes:
  readiness:
    enabled: true
  liveness:
    enabled: true
