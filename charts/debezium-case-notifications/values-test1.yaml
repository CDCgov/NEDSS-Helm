nameOverride: ""
fullnameOverride: ""
log_level: INFO
connect:
  replicaCount: 1
  imagePullSecrets: [ ]

  image:
    repository: quay.io/debezium/connect
    pullPolicy: IfNotPresent
    tag: "2.7"

  service:
    type: ClusterIP
    port: 8083
    protocol: TCP
    name: http

  ingress:
    enabled: false

  autoscaling:
    enabled: false

  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi

  properties:
    group_id: "debezium-odse-case-notification-connector-v061725-2"
    topics_basename: "debezium-odse-case-notification-connector"
    default_replication_factor: 2
    default_partitions: 10
    default_cleanup: "compact"
    sql_server_agent_override: false
    sql_server_agent_status: ""
    bootstrap_server: "b-1.cdcnbstestdevelopment.toyoo7.c10.kafka.us-east-1.amazonaws.com:9092,b-2.cdcnbstestdevelopment.toyoo7.c10.kafka.us-east-1.amazonaws.com:9092"

  connector_enable:
    nbs_case_notification: "enabled"
    
  sqlserverconnector_case_notification: {
    "name": "debezium-case-notification-connector-v061725-2",
    "config": {
      "connector.class": "io.debezium.connector.sqlserver.SqlServerConnector",
      "database.hostname": "nbs-db.private-dts1.nbspreview.com",
      "database.port": "1433",
      "database.user": "",
      "database.password": "",
      "database.dbname": "nbs_odse",
      "database.names": "nbs_odse",
      "database.server.name": "odse-case-notification",
      "database.history.kafka.bootstrap.servers": "b-1.nrtreportingdebezium.89ln12.c11.kafka.us-east-1.amazonaws.com:9092,
                                                   b-2.nrtreportingdebezium.89ln12.c11.kafka.us-east-1.amazonaws.com:9092",
      "database.history.kafka.topic": "dbhistory.database_server_name.database_name",
      # Uncomment following to manually bypass the sqlserver agent status query results
      #"database.sqlserver.agent.status.query": "select dbo.IsSqlAgentRunning()",
      "database.trustServerCertificate": "true",
      "include.schema.changes": "true",
      "key.converter": "org.apache.kafka.connect.json.JsonConverter",
      "key.converter.schemas.enable": "true",
      "producer.max.request.size": "10000000", #10MB
      "producer.message.max.bytes": "10000000", #10MB
      "snapshot.mode": "no_data",
      "schema.history.internal.kafka.topic": "odse-schema-history",
      "schema.history.internal.kafka.bootstrap.servers": "b-1.nrtreportingdebezium.89ln12.c11.kafka.us-east-1.amazonaws.com:9092,
                                                          b-2.nrtreportingdebezium.89ln12.c11.kafka.us-east-1.amazonaws.com:9092",
      "table.include.list": "dbo.CN_transportq_out",
      "tasks.max": "1",
      "topic.prefix": "cdc",
      "topic.creation.default.replication.factor": 2,
      "topic.creation.default.partitions": 10,
      "topic.creation.default.cleanup.policy": "compact",
      "time.precision.mode": "connect",
      "transforms": "dropPrefixConfig, dropPrefix, convertTimezone, unwrapConfig, convertTimestampsConfig_add_time, convertTimestampsConfig_last_chg_time, convertTimestampsConfig_status_time",
      "predicates": "isConfigTable",
      "transforms.dropPrefix.regex": "cdc\\.NBS_ODSE\\.dbo\\.(.+)",
      "transforms.dropPrefix.type": "org.apache.kafka.connect.transforms.RegexRouter",
      "transforms.dropPrefix.replacement": "nbs_$1",
      "transforms.dropPrefixConfig.regex": "cdc\\.NBS_ODSE\\.dbo\\.NBS_configuration",
      "transforms.dropPrefixConfig.type": "org.apache.kafka.connect.transforms.RegexRouter",
      "transforms.dropPrefixConfig.replacement": "nrt_NBS_configuration",
      "transforms.unwrapConfig.type": "io.debezium.transforms.ExtractNewRecordState",
      "transforms.unwrapConfig.predicate": "isConfigTable",
      "transforms.convertTimestampsConfig_add_time.type": "org.apache.kafka.connect.transforms.TimestampConverter$Value",
      "transforms.convertTimestampsConfig_add_time.target.type": "string",
      "transforms.convertTimestampsConfig_add_time.format": "yyyy-MM-dd HH:mm:ss.SSS",
      "transforms.convertTimestampsConfig_add_time.field": "add_time",
      "transforms.convertTimestampsConfig_add_time.predicate": "isConfigTable",
      "transforms.convertTimestampsConfig_last_chg_time.type": "org.apache.kafka.connect.transforms.TimestampConverter$Value",
      "transforms.convertTimestampsConfig_last_chg_time.target.type": "string",
      "transforms.convertTimestampsConfig_last_chg_time.format": "yyyy-MM-dd HH:mm:ss.SSS",
      "transforms.convertTimestampsConfig_last_chg_time.field": "last_chg_time",
      "transforms.convertTimestampsConfig_last_chg_time.predicate": "isConfigTable",
      "transforms.convertTimestampsConfig_status_time.type": "org.apache.kafka.connect.transforms.TimestampConverter$Value",
      "transforms.convertTimestampsConfig_status_time.target.type": "string",
      "transforms.convertTimestampsConfig_status_time.format": "yyyy-MM-dd HH:mm:ss.SSS",
      "transforms.convertTimestampsConfig_status_time.field": "status_time",
      "transforms.convertTimestampsConfig_status_time.predicate": "isConfigTable",
      "predicates.isConfigTable.type": "org.apache.kafka.connect.transforms.predicates.TopicNameMatches",
      "predicates.isConfigTable.pattern": "nrt_NBS_configuration",
      "transforms.convertTimezone.type": "io.debezium.transforms.TimezoneConverter",
      "transforms.convertTimezone.converted.timezone": "UTC",
      "value.converter": "org.apache.kafka.connect.json.JsonConverter",
      "value.converter.schemas.enable": "true",
    }
  }
  
  env:
    - name: BOOTSTRAP_SERVERS
      value: "b-1.cdcnbstestdevelopment.toyoo7.c10.kafka.us-east-1.amazonaws.com:9092,b-2.cdcnbstestdevelopment.toyoo7.c10.kafka.us-east-1.amazonaws.com:9092"
    - name: LOG_LEVEL
      value: "INFO"
    - name: KAFKA_LOG4J_OPTS
      value: "-Dlog4j.configuration=file:/kafka/config/log4j.properties"
    - name: NAME
      value: "debezium-odse-case-notification-connector-v061725-2"
    - name: TZ
      value: "UTC"

ui:
  enabled: false
  replicaCount: 1
  imagePullSecrets: [ ]

  image:
    repository: debezium/debezium-ui
    pullPolicy: Always
    tag: "2.7"

  service:
    type: ClusterIP
    port: "8080"
    protocol: TCP
    name: http

  ingress:
    enabled: true
    router: private
    host: DEBEZIUM_UI_HOST_ADDRESS

  autoscaling:
    enabled: false

  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 1Gi

  env:
    - name: KAFKA_CONNECT_URIS
      value: "http://debezium-connect:8083"
    - name: TZ
      value: "UTC"

