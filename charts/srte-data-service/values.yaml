replicaCount: 1

env: "prod"

image:
  #repository: "public.ecr.aws/o1z7u2g7/cdc-nbs-modernization/srte-data-service"
  #repository: "quay.io/us-cdcgov/cdc-nbs-modernization/srte-data-service"
  repository: ""
  pullPolicy: IfNotPresent
  tag: 1.0.1-SNAPSHOT.f646f56

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8081"

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8084
  httpsPort: 443

# Kubernetes resource limits
resources:
  limits:
    memory: "2Gi"
    cpu: "1000m"
  requests:
    memory: "1Gi"
    cpu: "500m"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ingressHost: "data.EXAMPLE_DOMAIN"

# dbserver is passed in as an environment variable. It is just the database endpoint
jdbc:
  dbserver: "EXAMPLE_DB_ENDPOINT"
  username: "EXAMPLE_DB_USER"
  password: "EXAMPLE_DB_USER_PASSWORD"

kafka:
  cluster: "EXAMPLE_MSK_KAFKA_ENDPOINT"

nbs:
  authuser: "EXAMPLE_NBS_AUTHUSER"

log:
  path: "/usr/share/srtedataservice/data"

authUri: "http://keycloak.default.svc.cluster.local/auth/realms/NBS"


# Overide available for readiness and liveness probes: path, port, initialDelaySeconds, periodSeconds, failureThreshold
probes:
  readiness:
    enabled: true
  liveness:
    enabled: true