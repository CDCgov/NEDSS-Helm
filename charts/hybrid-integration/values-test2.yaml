# Default values for hybrid-integration.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations:
    #kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/rewrite-target: /nbs/$2
    nginx.ingress.kubernetes.io/preserve-host: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($args ~ method=patientSearchSubmit){
            return 307 https://app.test2-cdc-nbs.eqsandbox.com/nbs/redirect/simpleSearch;
          }
      if ($args ~ ContextAction=GlobalPatient){
            rewrite ^ http://app.test2-cdc-nbs.eqsandbox.com/nbs/redirect/advancedSearch permanent;
          }
      if ($args ~ ContextAction=ViewFile){
            return 307 https://app.test2-cdc-nbs.eqsandbox.com/nbs/redirect/patientProfile?$args;
          }
      if ($args ~ ContextAction=FileSummary){
            return 307 https://app.test2-cdc-nbs.eqsandbox.com/nbs/redirect/patientProfile?$args;
          }
      if ($args ~ ContextAction=ReturnToFileEvents){
            rewrite ^ https://app.test2-cdc-nbs.eqsandbox.com/nbs/redirect/patientProfile/events/return?$args permanent;
          }
      if ($args ~ ContextAction=ReturnToFileSummary){
            rewrite ^ https://app.test2-cdc-nbs.eqsandbox.com/nbs/redirect/patientProfile/summary/return?$args permanent;
          }
      location ~ /nbs/SelectCondition1.do  {
        if ($args ~ ContextAction=Cancel){
            rewrite ^ https://app.test2-cdc-nbs.eqsandbox.com/nbs/redirect/patientProfile/events/return?$args permanent;
          }
      }
      location ~ /nbs/AddObservationMorb2.do {
        if ($is_args ~ ''){
            return 307 https://app.test2-cdc-nbs.eqsandbox.com/nbs/redirect/patient/report/morbidity/submit;
          }
        if ($args ~ ContextAction=Cancel){
            rewrite ^ https://app.test2-cdc-nbs.eqsandbox.com/nbs/redirect/patientProfile/events/return?$args permanent;
          }
      }
      location ~ /nbs/AddObservationLab2.do  {
        if ($args ~ ContextAction=Submit){
            return 307 https://app.test2-cdc-nbs.eqsandbox.com/nbs/redirect/patient/report/lab/submit;
          }
        if ($args ~ ContextAction=Cancel){
            rewrite ^ https://app.test2-cdc-nbs.eqsandbox.com/nbs/redirect/patientProfile/events/return?$args permanent;
          }
      }
      if ($args ~ method=mergeSubmit&ContextAction=Submit){
            rewrite ^ https://app.test2-cdc-nbs.eqsandbox.com/nbs/redirect/patientProfile/events/return?$args permanent;
          }
      #location ~ /nbs/PageAction.do
      #{
      #    set $ab X;
      #    if ($args ~ method=mergeSubmit) {
      #        set $ab A;
      #    }
      #    if ($args ~ ContextAction=Submit) {
      #        set $ab "${ab}B";
      #    }
      #    if ($ab = AB) {
      #        rewrite ^ https://app.test2-cdc-nbs.eqsandbox.com/nbs/redirect/patientProfile/events/return?$args permanent;
      #    }
      #}
  tls:
    - secretName: app.test2-cdc-nbs.eqsandbox.com
      hosts:
        - app.test2-cdc-nbs.eqsandbox.com
  hosts:
    - host: elastic.test2-cdc-nbs.eqsandbox.com
      paths:
        - path: "/"
          pathType: Prefix
          backend:
            service:
              name: elasticsearch
              port:
                number: 9200
    - host: app.test2-cdc-nbs.eqsandbox.com
      paths:      
      - path: /nbs(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: nbs-legacy
            port:
              number: 443

nbsExternalName: app-classic.test2-cdc-nbs.eqsandbox.com


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
