replicaCount: 1

env: "prod"
timezone: "UTC"

image:
  repository: "quay.io/us-cdcgov/cdc-nbs-modernization/data-reporting-service/post-processing-reporting-service"
  tag: "v1.1.1"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8081"

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8095
  httpsPort: 443
  fixedDelay:
    cachedIds: 20000 # Time in millis
    datamart: 60000 # Time in millis

ingress:
  enabled: true
  className: "nginx"
  tls:
  - secretName: "app.EXAMPLE_DOMAIN"
    hosts:
    - "app.EXAMPLE_DOMAIN"

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ingressHost: "app.EXAMPLE_DOMAIN"

jdbc:
  username: "EXAMPLE_DB_USER"
  password: "EXAMPLE_DB_USER_PASSWORD"

odse:
  dburl: "EXAMPLE_DB_URL"

rdb:
  dburl: "EXAMPLE_RDB_URL"

kafka:
  cluster: "EXAMPLE_KAFKA_CLUSTER"

log:
  path: "/usr/share/post-processing-reporting/data"

featureFlag:
  eventMetricEnable: "true"
  dTbHivEnable: "false"
  morbReportDmEnable: "false"
  invSummaryDmEnable: "false"
  summaryReportEnable: "false"
  aggregateReportEnable: "false"

# Override available for readiness and liveness probes: path, port, initialDelaySeconds, periodSeconds, failureThreshold
probes:
  readiness:
    enabled: true
  liveness:
    enabled: true