replicaCount: 1

env: "feature"
timezone: "UTC"

image:
  repository: ""
  pullPolicy: IfNotPresent
  tag: "1.0.1-SNAPSHOT.06fe1ff"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8081"

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8095
  httpsPort: 443
  fixedDelay:
    cachedIds: 20000 # Time in millis
    datamart: 60000 # Time in millis

ingress:
  enabled: true
  className: "nginx"
  tls:
  - secretName: app.feature.nbspreview.com
    hosts:
    - app.feature.nbspreview.com

# Kubernetes resource limits
resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ingressHost: "app.feature.nbspreview.com"

jdbc:
  username: ""
  password: ""

odse:
  dburl: ""

rdb:
  dburl: ""

kafka:
  cluster: ""

log:
  path: "/usr/share/postprocessingreporting/data"

featureFlag:
  eventMetricEnable: "true"
  dTbHivEnable: "true"
  morbReportDmEnable: "true"
  invSummaryDmEnable: "true"
  summaryReportEnable: "true"
  aggregateReportEnable: "true"
  dymDMEnable: "true"
  ldfEnable: "true"


# Override available for readiness and liveness probes: port, initialDelaySeconds, periodSeconds, failureThreshold
probes:
  readiness:
    enabled: true
  liveness:
    enabled: true