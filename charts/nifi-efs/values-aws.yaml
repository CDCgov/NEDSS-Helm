replicaCount: 1

image:
  repository: ""
  pullPolicy: IfNotPresent
  tag: "v1.0.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8443

ingress:
  enabled: false
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/upstream-vhost: "localhost:8443"
    nginx.ingress.kubernetes.io/proxy-redirect-from: "https://localhost:8443"
    nginx.ingress.kubernetes.io/proxy-redirect-to: "https://nifi.example.com"
    cert-manager.io/cluster-issuer: "letsencrypt-production"
  tls:
    - secretName: nifi.example.com
      hosts:
        - nifi.example.com
  hosts:
    - host: nifi.example.com
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nifi
            port:
              number: 8443

resources: 
  limits:
    memory: "6Gi"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

containerPort: 8443

pvc:
  nifiPvClaim:
    storageRequest: 50Gi


efsFileSystemId: ""

### Nifi Configurations ###

jvmheap:
  init: "4g"
  max: "4g"

# jdbcConnectionString is passed in as an override and all values must be supplied. 
# Replace <db_endpoint>, <database>, <username>, and <password> in the following:
# "jdbc:sqlserver://<db_endpoint>:1433;databaseName=<database>;user=<username>;password=<password>;encrypt=true;trustServerCertificate=true;"
jdbcConnectionString: ""
elasticSearchHost: "http://elasticsearch.default.svc.cluster.local:9200"

# Default NiFi Admin Username and Password. Password must be minimum of 12 characters
singleUserCredentialsUsername: ""
singleUserCredentialsPassword: ""

# NiFi Sensitive Props Key. Specifies the source string used to derive an encryption key.
# The Sensitive Properties Key is not the encryption key itself, but the password from which NiFi derives the actual encryption key.
nifiSensitivePropsKey: ""
