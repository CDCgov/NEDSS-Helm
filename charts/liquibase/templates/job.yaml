apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "liquibase.fullname" . }}
  labels:
    {{- include "liquibase.labels" . | nindent 4 }}
spec:  
  # allow only a single instance of liquibase to run, no retries
  backoffLimit: 0
  template:    
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}      
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}      {{- end }}
      
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: Never      
      containers:
        - name: {{ .Chart.Name }}          
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}          
          env:
            - name: TZ
              value: {{ .Values.timezone }}
          command:
            - "bash"
            - "-c"
            - |
              # SRTE Database
              if [ {{ lower .Values.enabled_databases.srte }} == "enabled"  ]; then
                echo "Executing changelog {{ .Values.changelog.srte }} in DB : {{ .Values.jdbc.srte_db_url }}"
                liquibase --changelog-file="{{ .Values.changelog.srte }}" --searchPath="./" --url="{{ .Values.jdbc.srte_db_url }}" --username={{ .Values.jdbc.srte_username }} --password={{ .Values.jdbc.srte_password }} update >> logs
                # Returns non-zero code if failed
                status=$?
                ## Log and exit if failed
                [ $status -eq 0 ] && echo "{{ .Values.changelog.srte }} scripts : execution success!" || echo "ERROR: {{ .Values.changelog.srte }} failed with exit code $status"
                ## [ $status -eq 0 ]  || exit $status
              fi

              # NBS_ODSE Database
              if [ eq {{ lower .Values.enabled_databases.odse }} == "enabled" ]; then
                echo "Executing changelog {{ .Values.changelog.odse }} in DB : {{ .Values.jdbc.odse_db_url }}"
                liquibase --changelog-file="{{ .Values.changelog.odse }}" --searchPath="./" --url="{{ .Values.jdbc.odse_db_url }}" --username={{ .Values.jdbc.username }} --password={{ .Values.jdbc.password }} update
                # Returns non-zero code if failed
                status=$?
                ## Log and exit if failed
                [ $status -eq 0 ] && echo "{{ .Values.changelog.odse }} scripts : execution success!" || echo "ERROR: {{ .Values.changelog.odse }} failed with exit code $status"
                [ $status -eq 0 ]  || exit 1
              fi

              # RDB Database
              if [ {{ lower .Values.enabled_databases.rdb }} == "enabled" ]; then
                echo "Executing changelog {{ .Values.changelog.rdb }} in DB : {{ .Values.jdbc.rdb_db_url }}"
                liquibase --changelog-file="{{ .Values.changelog.rdb }}" --searchPath="./" --url="{{ .Values.jdbc.rdb_db_url }}" --username={{ .Values.jdbc.username }} --password={{ .Values.jdbc.password }} update
                # Returns non-zero code if failed
                status=$?
                ## Log and exit if failed
                [ $status -eq 0 ] && echo "{{ .Values.changelog.rdb }} scripts : execution success!" || echo "ERROR: {{ .Values.changelog.rdb }} failed with exit code $status"
                [ $status -eq 0 ]  || exit 1
              fi

              # RDB_MODERN Database
              if [ {{ lower .Values.enabled_databases.rdb_modern }} == "enabled" ]; then
                echo "Executing changelog {{ .Values.changelog.rdb_modern }} in DB : {{ .Values.jdbc.rdb_modern_db_url }}"
                liquibase --changelog-file="{{ .Values.changelog.rdb_modern }}" --searchPath="./" --url="{{ .Values.jdbc.rdb_modern_db_url }}" --username={{ .Values.jdbc.username }} --password={{ .Values.jdbc.password }} update
                # Returns non-zero code if failed
                status=$?
                ## Log and exit if failed
                [ $status -eq 0 ] && echo "{{ .Values.changelog.rdb_modern }} scripts : execution success!" || echo "ERROR: {{ .Values.changelog.rdb_modern }} failed with exit code $status"
                [ $status -eq 0 ]  || exit 1
              fi

              echo "Liquibase Update Complete. All scripts: execution success! Exiting"
              echo "Sleep infinitely"
              sleep infinity
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          