{{- range $serviceName, $service := .Values.services }}
---
# Kubernetes Deployment template for services defined in Helm values.
# This template dynamically generates Deployment resources for each service
# specified in the `services` section of the Helm values file.

apiVersion: apps/v1
kind: Deployment
metadata:
  # The name of the Deployment is generated dynamically based on the release name and service name.
  name: "{{ printf "%s-%s" $.Release.Name $serviceName | trunc 63 | trimSuffix "-" }}"
  labels:
    # Standard Kubernetes labels for identifying the application and its version.
    app.kubernetes.io/name: "{{ $serviceName }}"
    app.kubernetes.io/instance: "{{ $.Release.Name }}"
    app.kubernetes.io/version: "{{ $service.image.tag | default "latest" }}"
    app.kubernetes.io/managed-by: "{{ $.Release.Service }}"
spec:
  # Number of replicas for the Deployment, defaulting to global replica count if not specified.
  replicas: {{ $service.replicaCount | default $.Values.global.replicaCount | default 1 }}
  selector:
    matchLabels:
      # Labels used to match pods created by this Deployment.
      app.kubernetes.io/name: "{{ $serviceName }}"
      app.kubernetes.io/instance: "{{ $.Release.Name }}"
  template:
    metadata:
      labels:
        # Labels applied to the pod template for identification.
        app.kubernetes.io/name: "{{ $serviceName }}"
        app.kubernetes.io/instance: "{{ $.Release.Name }}"
      {{- with $service.podAnnotations }}
      annotations:
      # Additional annotations for the pod, if specified in the service configuration.
        {{ toYaml . | nindent 8 }}
      {{- end }}
    spec:
      # Service account name for the pod, dynamically generated or explicitly specified.
      serviceAccountName: {{- if $service.serviceAccount.name }} {{ $service.serviceAccount.name | quote }} {{- else }} {{ printf "%s-%s" $.Release.Name $serviceName | trunc 63 | trimSuffix "-" | quote }} {{- end }}
      containers:
        - name: {{ $serviceName }}
          # Container image and tag, defaulting to global values if not specified.
          image: {{ if $service.image.repository }}
                 "{{$service.image.repository}}/{{ $service.image.name}}:{{$service.image.tag}}"
                 {{- else }}
                 "{{$.Values.global.image.repository}}/{{$service.image.name}}:{{$.Values.global.image.tag}}"
                 {{- end }}
          imagePullPolicy: "{{ $service.image.pullPolicy | default "IfNotPresent" }}"
          ports:
            - containerPort: {{ $service.service.port | default 8080 }}

          {{- if and (hasKey $service "probes") (hasKey $service.probes "readiness") (get $service.probes.readiness "enabled") }}
          readinessProbe:
            # Readiness probe configuration for the container.
            httpGet:
              path: {{ $service.probes.readiness.path | default (printf "/reporting/%s-svc/status" $serviceName) | quote }}
              port: {{ $service.service.port | default 8080 }}
            initialDelaySeconds: {{ $service.probes.readiness.initialDelaySeconds | default 30 }}
            periodSeconds: {{ $service.probes.readiness.periodSeconds | default 10 }}
            failureThreshold: {{ $service.probes.readiness.failureThreshold | default 5 }}
          {{- end }}

          {{- if and (hasKey $service "probes") (hasKey $service.probes "liveness") (get $service.probes.liveness "enabled") }}
          livenessProbe:
            # Liveness probe configuration for the container.
            httpGet:
              path: {{ $service.probes.liveness.path | default (printf "/reporting/%s-svc/status" $serviceName) | quote }}
              port: {{ $service.service.port | default 8080 }}
            initialDelaySeconds: {{ $service.probes.liveness.initialDelaySeconds | default 60 }}
            periodSeconds: {{ $service.probes.liveness.periodSeconds | default 30 }}
            failureThreshold: {{ $service.probes.liveness.failureThreshold | default 5 }}
          {{- end }}

          resources:
          # Resource limits and requests for the container, defaulting to global values if not specified.
            {{- if $service.resources }}
            {{ toYaml $service.resources | nindent 12 }}
            {{- else }}
            {{ toYaml $.Values.global.resources | nindent 12 }}
            {{- end }}

          env:
            # Environment variables for the container, including database credentials and feature flags.
            - name: ENV
              value: {{ $service.env | default $.Values.global.env | quote }}
            - name: TZ
              value: {{ $service.timezone | default $.Values.global.timezone | quote }}
            - name: DB_USERNAME
              value: {{ $service.jdbc.username | trim }}
{{/*              valueFrom:*/}}
{{/*                secretKeyRef:*/}}
{{/*                  name: {{ $service.secrets.jdbc.secretName | quote }}*/}}
{{/*                  key: {{ $service.secrets.jdbc.username | trim | quote }}*/}}

            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $service.secrets.jdbc.secretName | quote }}
                  key: {{ $service.secrets.jdbc.password | trim | quote }}
            - name: DB_ODSE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.global.secrets.dburl.secretName | quote }}
                  key: {{ $.Values.global.secrets.dburl.odse | quote }}
            - name: DB_RDB_URL
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.global.secrets.dburl.secretName | quote }}
                  key: {{ $.Values.global.secrets.dburl.rdb | quote }}
            - name: KAFKA_BOOTSTRAP_SERVER
              value: {{- if and (hasKey $service "kafka") (hasKey $service.kafka "cluster") }} {{ $service.kafka.cluster | quote }} {{- else }} {{ $.Values.global.kafka.cluster | quote }} {{- end }}
            - name: DA_LOG_PATH
              value: {{- if and (hasKey $service "log") (hasKey $service.log "path") }} {{ $service.log.path | quote }} {{- else }} {{ $.Values.global.log.path | quote }} {{- end }}
            - name: FF_PHC_DM_ENABLE
              value: {{- if and (hasKey $service "featureFlag") (hasKey $service.featureFlag "phcDatamartEnable") }} {{ $service.featureFlag.phcDatamartEnable | quote }} {{- else }} "false" {{- end }}
            - name: FF_ES_ENABLE
              value: {{- if and (hasKey $service "featureFlag") (hasKey $service.featureFlag "elasticSearchEnable") }} {{ $service.featureFlag.elasticSearchEnable | quote }} {{- else }} "false" {{- end }}

      {{- if $service.nodeSelector }}
      nodeSelector:
      # Node selector for scheduling the pod on specific nodes.
        {{ toYaml $service.nodeSelector | nindent 8 }}
      {{- else if $.Values.global.nodeSelector }}
      nodeSelector:
        {{ toYaml $.Values.nodeSelector | nindent 8 }}
      {{- end }}

      {{- if $service.affinity }}
      affinity:
      # Affinity rules for scheduling the pod.
        {{ toYaml $service.affinity | nindent 8 }}
      {{- else if $.Values.global.affinity }}
      affinity:
        {{ toYaml $.Values.global.affinity | nindent 8 }}
      {{- end }}

      {{- if $service.tolerations }}
      tolerations:
      # Tolerations for scheduling the pod on tainted nodes.
        {{ toYaml $service.tolerations | nindent 8 }}
      {{- else if $.Values.global.tolerations }}
      tolerations:
        {{ toYaml $.Values.global.tolerations | nindent 8 }}
      {{- end }}

      {{- with $.Values.global.imagePullSecrets }}
      imagePullSecrets:
      # Image pull secrets for accessing private container registries.
        {{ toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}