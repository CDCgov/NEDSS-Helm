replicaCount: 1

env: "azure"

image:
  repository: "quay.io/us-cdcgov/cdc-nbs-modernization/data-compare-api-service"
  pullPolicy: IfNotPresent
  tag: "v1.0.7"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8098"

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8085
  httpsPort: 443

resources:
  limits:
    memory: "2Gi"
    cpu: "1000m"
  requests:
    memory: "1Gi"
    cpu: "500m"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ingressHost: "data.azure.example.com"

jdbc:
  dbserver: "tf-cdc-nbs6-sql-managed-instance.cdf5734b998e.database.windows.net"
  username: "nbs_ods"
  password: ""

authUri: ""

kafka:
  cluster: "wn0-dev-hd.dsnw3omymczu3cea2rtxoridtc.bx.internal.cloudapp.net:9092,wn1-dev-hd.dsnw3omymczu3cea2rtxoridtc.bx.internal.cloudapp.net:9092,wn2-dev-hd.dsnw3omymczu3cea2rtxoridtc.bx.internal.cloudapp.net:9092"

azure:
  storageAccountName: "AZURE_STORAGE_ACCOUNT_NAME"
  containerName: "AZURE_CONTAINER_NAME"
  connectionString: "AZURE_CONNECTION_STRING"
  sasToken: "AZURE_SAS_TOKEN"
  managedIdentity:
    enabled: false

log:
  path: "/usr/share/datacompareapi/data"

pvc:
  dcPvClaim:
    storageClass: azurefile-csi-private-datacompareapi
    storageRequest: 20Gi

azureFileShareName: ""
