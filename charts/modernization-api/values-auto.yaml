replicaCount: 1

env: "ai"

image:
  repository: ""
  pullPolicy: IfNotPresent
  tag: "1.0.1-SNAPSHOT.46ec9cd"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:  {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8080
  httpsPort: 443
  gatewayPort: 8000

# nginx-ingress
ingress:
  enabled: false
  className: "nginx"  
  tls:
    - secretName: app.ai-cdc-nbs.eqsandbox.com
      hosts:
        - app.ai-cdc-nbs.eqsandbox.com

nbsExternalName: app-classic.ai-cdc-nbs.eqsandbox.com

# determine whether or not to use istio-gateway for ingress (only 1 ingress should be used to prevent conflicts)
istioGatewayIngress:
  enabled: true
  host: app.ai-cdc-nbs.eqsandbox.com
  gatewayNamespace: "istio-ingress"
  certificateName: ""
  certificateIssuerName: "letsencrypt-production"

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ingressHost: "app.ai-cdc-nbs.eqsandbox.com"

elasticSearchHost: "http://elasticsearch.default.svc.cluster.local:9200"

jdbc:
  connectionString: ""
  user: ""
  password: ""
