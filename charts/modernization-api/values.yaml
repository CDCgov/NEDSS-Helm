replicaCount: 1

env: "prod"

image:
  repository: "quay.io/us-cdcgov/cdc-nbs-modernization/modernization-api"
  pullPolicy: IfNotPresent
  tag: "v1.4.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8080
  httpsPort: 443
  gatewayPort: 8000
  pageBuilderPort: 8095

pageBuilder:
  enabled: "false"
  page:
    library:
      enabled: "false"
    management:
      create:
        enabled: "false"
      edit:
        enabled: "false"

ingress:
  enabled: true
  className: "nginx"
  tls:
    - secretName: app.EXAMPLE_DOMAIN
      hosts:
        - app.EXAMPLE_DOMAIN

# determine whether or not to use istio-gateway for ingress (only 1 ingress should be used to prevent conflicts)
istioGatewayIngress:
  enabled: false
  host: app.EXAMPLE_DOMAIN
  gatewayNamespace: "istio-ingress"
  certificateName: ""
  certificateIssuerName: "letsencrypt-production"

mTLS:
  enabled: true

nbsExternalName: app-classic.EXAMPLE_DOMAIN

resources:
  limits:
    memory: "4Gi"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ingressHost: "app.EXAMPLE_DOMAIN"

# The timezone to initialize the JVM with
timezone: "UTC"

elasticSearchHost: "http://elasticsearch.default.svc.cluster.local:9200"

jdbc:
  # jdbc.connectionString is passed in as an override and all values must be supplied.
  # Replace <db_endpoint>, <database>, <username>, and <password> in the following:
  # "jdbc:sqlserver://<db_endpoint>:1433;databaseName=<database>;user=<username>;password=<password>;encrypt=true;trustServerCertificate=true;"
  connectionString: "jdbc:sqlserver://EXAMPLE_DB_ENDPOINT:1433;databaseName=EXAMPLE_DB_NAME;user=EXAMPLE_ODSE_DB_USER;password=EXAMPLE_ODSE_DB_USER_PASSWORD;encrypt=true;trustServerCertificate=true;"
  user: "EXAMPLE_ODSE_DB_USER"
  password: "EXAMPLE_ODSE_DB_USER_PASSWORD"

security:
  # Used to encrypt JWT, needs to match between page builder and modernization-api
  # Random value can be generated by running: openssl rand -base64 64 | tr -d '\n'
  # Windows users, use git bash shell
  tokenSecret: "EXAMPLE_TOKEN_SECRET"
  # Used to encrypt search parameters
  # Random value can be generated by running: openssl rand -base64 32 | cut -c1-32
  parameterSecret: "EXAMPLE_PARAMETER_SECRET"

# OIDC settings
#  must be enabled and configured in nbs-gateway
oidc:
  enabled: "true"
  # specifies the uri for the OIDC issuer, defaults to https://ingressHost/auth/realms/nbs-users
  uri: ""

ui:
  # settings for modernized ui
  smarty:
    # The embedded API key, when blank the Smarty API will not be invoked.
    key:
  analytics:
    # The host name of the PostHog server to send analytics to
    host: "https://us.i.posthog.com"
    # The PostHog project key to associate frontend analytics with, when blank analytics will not be enabled
    key:
  defaults:
    # The default sizing of components
    sizing: "small"
  # feature flag configurations for modernized ui
  search:
    events:
      # Enables access to NBS6 Event Search
      enabled: true
    investigations:
      # Enables access to modernized Investigation search
      enabled: false
    laboratoryReports:
      # Enables access to modernized Laboratory search
      enabled: false
  patient:
    file:
      # Enables access to the modernized Patient File
      enabled: true
      # Enables presence of Merge History card in Patient File
      mergeHistory:
        enabled: false
    search:
      filters:
        # [deprecated]  Enables access to modernized Patient search filters. (marked for removal)
        enabled: true
  deduplication:
    # Enable access to Deduplication screens
    enabled: false
    merge:
      # Enable access to Deduplication merge screens
      enabled: false
  system:
    management:
      # Enable access to System Management screen
      enabled: false

# Override available for readiness and liveness probes: port, initialDelaySeconds, periodSeconds, failureThreshold
probes:
  readiness:
    enabled: true
  liveness:
    enabled: true
