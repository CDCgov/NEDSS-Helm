replicaCount: 1

image:
  repository: ""
  pullPolicy: IfNotPresent
  tag: 1.19.0-SNAPSHOT.e88fe50

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8443

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/upstream-vhost: "localhost:8443"
    nginx.ingress.kubernetes.io/proxy-redirect-from: "https://localhost:8443"
    nginx.ingress.kubernetes.io/proxy-redirect-to: "https://nifi.dev-cdc-nbs.eqsandbox.com"
    cert-manager.io/cluster-issuer: "letsencrypt-production"
  tls:
    - secretName: nifi.dev-cdc-nbs.eqsandbox.com
      hosts:
        - nifi.dev-cdc-nbs.eqsandbox.com
  hosts:
    - host: nifi.dev-cdc-nbs.eqsandbox.com
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nifi
            port:
              number: 8443

resources:
  requests:
    memory: "2Gi"
  limits:
    memory: "2Gi"

jvmheap:
  init: "1g"
  max: "1g"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

containerPort: 8443



# NiFi Username which will be set while deploying 
singleUserCredentialsUsername: ""

# NiFi Sensitive Props key which will be set while deploying 
nifiSensitivePropsKey: ""   

#JDBC end pont for database
jdbcConnectionString: ""

# NiFi Password which will be set while deploying 
singleUserCredentialsPassword: ""
elasticSearchHost: "http://elasticsearch.default.svc.cluster.local:9200"
