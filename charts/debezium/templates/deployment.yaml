apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "debezium.fullname" . }}-connect
  labels:
    {{- include "debezium.labels.connect" . | nindent 4 }}
spec:
  {{- if not .Values.connect.autoscaling.enabled }}
  replicas: {{ .Values.connect.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "debezium.selectorLabels.connect" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.connect.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "debezium.selectorLabels.connect" . | nindent 8 }}
    spec:
      {{- with .Values.connect.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "debezium.name" . }}-connect
            defaultMode: 0744
      containers:
        - name: {{ .Chart.Name }}-connect
          image: "{{ .Values.connect.image.repository }}:{{ .Values.connect.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.connect.image.pullPolicy }}
          ports:
            - name: {{ .Values.connect.service.name }}
              containerPort: {{ .Values.connect.service.port }}
              protocol: {{ .Values.connect.service.protocol }}
          resources:
            {{- toYaml .Values.connect.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/debezium/connector-odse.json
              subPath: connector-odse.json
            - name: config
              mountPath: /etc/debezium/connector-srte.json
              subPath: connector-srte.json
            - name: config
              mountPath: /etc/debezium/connector-meta.json
              subPath: connector-meta.json
            - name: config
              mountPath: /kafka/config/log4j.properties
              subPath: log4j.properties
            - name: config
              mountPath: /kafka/config/connect-distributed.properties
              subPath: connect-distributed.properties
          {{- with .Values.connect.env }}
          env:
            {{- toYaml . | nindent 12}}
          {{- end}}
          command: ['/kafka/bin/connect-distributed.sh', '/kafka/config/connect-distributed.properties']
          lifecycle:
            postStart:
              exec:
                #command: [ '/bin/sh', '-c', 'sleep 60; curl --request POST --header "Accept:application/json" --header "Content-Type:application/json" "http://127.0.0.1:8083/connectors/" --data "@/etc/debezium/connector.json"' ]
                command:
                  - "/bin/sh"
                  - "-c"
                  - |
                    #0. Sleeping for 1 min
                    echo "Sleeping for 1 min"
                    sleep 60;
                    #1. Get the running connectors
                    echo "Get the running connectors"
                    connectors=($(curl --request GET  "http://127.0.0.1:8083/connectors"))

                    #2. Clean the array string
                    echo "Clean the array string"
                    cleaned_connector_names=$(sed 's/[][]//g; s/"//g' <<< "$connectors")

                    # 3. Iterate and delete running debezium connector tasks
                    echo "Iterate and delete running debezium connector tasks"
                    IFS=',' read -r -a my_array <<< "$cleaned_connector_names"
                    for task in "${my_array[@]}"; do
                      echo "Deleting Connector task : $task"
                      curl --request DELETE  "http://127.0.0.1:8083/connectors/$task"
                    done

                    #4. Starting SRTE task if enabled
                    if [ "{{ lower .Values.connect.connector_enable.nbs_srte }}" == "enabled" ]; then
                      echo "Starting SRTE task with SRTE configuration"
                      curl --request POST \
                      --header "Accept:application/json" \
                      --header "Content-Type:application/json" \
                      --data '@/etc/debezium/connector-srte.json' \
                      "http://127.0.0.1:8083/connectors/" || echo "Failed to start SRTE connector";
                    fi

                    #5. Starting ODSE task if enabled
                    if [ "{{ lower .Values.connect.connector_enable.nbs_odse }}" == "enabled" ]; then
                      echo "Starting ODSE task with ODSE configuration"
                      curl --request POST \
                      --header "Accept:application/json" \
                      --header "Content-Type:application/json" \
                      --data '@/etc/debezium/connector-odse.json' \
                      "http://127.0.0.1:8083/connectors/" || echo "Failed to start ODSE connector";
                    fi

                    connectors=($(curl --request GET  "http://127.0.0.1:8083/connectors"))
                    echo "Successfully running connectors: $connectors"

      {{- with .Values.connect.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.connect.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.connect.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- if .Values.ui.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "debezium.fullname" . }}-ui
  labels:
    {{- include "debezium.labels.ui" . | nindent 4 }}
spec:
  {{- if not .Values.ui.autoscaling.enabled }}
  replicas: {{ .Values.ui.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "debezium.selectorLabels.ui" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.ui.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "debezium.selectorLabels.ui" . | nindent 8 }}
    spec:
      {{- with .Values.ui.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-ui
          image: "{{ .Values.ui.image.repository }}:{{ .Values.ui.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.ui.image.pullPolicy }}
          ports:
            - name: {{ .Values.ui.service.name}}
              containerPort: 80
              protocol: TCP
          resources:
            {{- toYaml .Values.ui.resources | nindent 12 }}
          {{- with .Values.ui.env }}
          env:
            {{- toYaml . | nindent 12}}
          {{- end}}
      {{- with .Values.ui.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ui.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ui.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end}}