replicaCount: 1

env: "azure"

image:
  repository: "quay.io/us-cdcgov/cdc-nbs-modernization/data-compare-processor-service"
  pullPolicy: IfNotPresent
  tag: "v1.0.7"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8098"

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8086
  httpsPort: 443

resources:
  limits:
    memory: "2Gi"
    cpu: "1000m"
  requests:
    memory: "1Gi"
    cpu: "500m"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

ingressHost: "data.EXAMPLE_DOMAIN"

# dbserver is passed in as an environment variable. It is just the database endpoint
jdbc:
  dbserver: "EXAMPLE_DB_ENDPOINT"
  username: "EXAMPLE_ODSE_DB_USER"
  password: "EXAMPLE_ODSE_DB_USER_PASSWORD"

authUri: ""

kafka:
  cluster: "EXAMPLE_MSK_KAFKA_ENDPOINT"

log:
  path: "/usr/share/datacompareprocessor/data"

#Azure PVC Settings#
azure:
  files:
    resourceGroupName: 
    storageAccountName: 
    storageClass: azurefile-csi-private-datacompareprocessor
    storageRequest: 20Gi
  storageAccountName: "AZURE_STORAGE_ACCOUNT_NAME"
  containerName: "AZURE_CONTAINER_NAME"
  connectionString: "AZURE_CONNECTION_STRING"
  sasToken: "AZURE_SAS_TOKEN"
  managedIdentity:
    enabled: false

#AWS PVC Settings#
pvc:
  dcPvClaim:
    storageClass: efs-datacompareprocessor
    storageRequest: 20Gi

ses:
  recipients: ""

efsFileSystemId: "EXAMPLE_EFS_ID"
