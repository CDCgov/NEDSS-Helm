replicaCount: 1

env: "ce1"

image:
  repository: ""
  pullPolicy: IfNotPresent
  tag: v1.0.8

# Host URL for application
ingressHost: app.ce1.nbspreview.com

# URL for access to classic application
nbsExternalName: app-classic.ce1.nbspreview.com

#Database access credentials
jdbc:
  connectionString: ""
  user: ""
  password: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8095
  httpsPort: 443
  gatewayPort: 8000

# determine whether or not to use nginx for ingress (only 1 ingress should be used to prevent conflicts)
ingress:
  enabled: true
  className: "nginx"
  # tls:
  #   - secretName: app.example.com
  #     hosts:
  #       - app.example.com

# determine whether or not to use istio-gateway for ingress (only 1 ingress should be used to prevent conflicts)
istioGatewayIngress:
  enabled: false
  # host: app.example.com
  gatewayNamespace: "istio-ingress"
  certificateName: ""
  certificateIssuerName: "letsencrypt-production"

# Kubernetes resource limits
resources:
  limits:
    memory: "2Gi"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
